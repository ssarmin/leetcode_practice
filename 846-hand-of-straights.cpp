//https://leetcode.com/problems/hand-of-straights
class Solution {
public:
    bool isNStraightHand(vector<int>& hand, int groupSize) {
        if(hand.size()%groupSize != 0)
            return false;
        
        map<int, int> m;
        for(auto a: hand){
            m[a]++;
        }
        while(!m.empty()){
            auto it = m.begin();
            int val = it->first;
            for(int i=0; i<groupSize; i++){
                int v = val+i;
                if(m.count(v)){
                    m[v]--;
                    if(m[v] == 0){
                        m.erase(v);
                    }
                }else{
                    return false;
                }
            }
        }
        return true;
    }
};

// [2,3,4,5,6,7,8,9]
// 8
// [8,8,9,7,7,7,6,7,10,6]
// 2
// [66,75,4,37,92,87,68,65,58,100,97,42,19,66,73,1,5,44,30,29,76,31,12,35,26,93,9,36,90,16,86,15,4,9,13,98,10,14,18,90,89,3,10,65,24,31,43,25,54,55,54,81,10,80,31,12,15,14,59,27,64,93,32,26,69,79,13,32,29,24,27,91,92,82,37,101,100,61,74,30,91,62,36,92,28,23,4,63,55,3,11,11,101,22,34,25,2,75,43,72]
// 2
// [1,1,2,2,3,3]
// 2
// [1,2,3,3,4,4,5,6]
// 4
// [3,2,1,2,3,4,3,4,5,9,10,11]
// 3
// [1,2,3,4]
// 3
// [1,2,3,4,5]
// 4
// [1,2,3,8,5,6,7,8]
// 4
// [2,3,1]
// 3
// [9,13,15,23,22,25,4,4,29,15,8,23,12,19,24,17,18,11,22,24,17,17,10,23,21,18,14,18,7,6,3,6,19,11,16,11,12,13,8,26,17,20,13,19,22,21,27,9,20,15,20,27,8,13,25,23,22,15,9,14,20,10,6,5,14,12,7,16,21,18,21,24,23,10,21,16,18,16,18,5,20,19,20,10,14,26,2,9,19,12,28,17,5,7,25,22,16,17,21,11]
// 10
// [53,78,62,108,83,56,66,110,49,104,117,123,86,131,94,107,84,103,42,127,100,50,55,97,81,93,71,45,63,39,91,87,129,126,84,125,73,95,116,47,106,52,121,54,38,68,69,76,89,90,57,67,86,114,64,87,79,92,115,60,51,105,132,101,59,130,44,85,80,82,48,65,128,102,74,61,40,46,98,111,109,119,72,43,112,120,58,113,77,88,41,118,75,85,124,122,96,83,99,70]
// 50
// [1,2,3,6,2,3,4,7,8]
// 3
// [1,2,3,4,5,6]
// 2
// [2,1]
// 2
// [7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7]
// 1
