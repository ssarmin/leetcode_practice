//https://leetcode.com/problems/lru-cache
class LRUCache {
public:
    int cap;
    unordered_map<int, pair<int, list<int>::iterator>> m;//key->val, order iterator
    list<int> order; //key
    LRUCache(int capacity) {
        this->cap = capacity;
    }
    
    int get(int key) {
        if(m.count(key)){
            auto it = m[key].second;
            order.erase(it);
            order.push_front(key);
            m[key].second = order.begin();
            return m[key].first;
        }else{
            return -1;
        }
    }
    
    void put(int key, int value) {
        if(m.count(key)){
            auto it = m[key].second;
            order.erase(it);
            
        }else if(order.size() == cap){
            int lru_key = order.back();
            m.erase(lru_key);
            order.pop_back();
        }
        order.push_front(key);
        m[key] = {value, order.begin()};
    }
};


// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get","put","put","get","get","get","put","put","get","put","get","put","get","get","get","put","put","put","get","put","get","get","put","put","get","put","put","put","put","get","put","put","get","put","put","get","put","put","put","put","put","get","put","put","get","put","get","get","get","put","get","get","put","put","put","put","get","put","put","put","put","get","get","get","put","put","put","get","put","put","put","get","put","put","put","get","get","get","put","put","put","put","get","put","put","put","put","put","put","put"]
// [[10],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9],[4,30],[9,3],[9],[10],[10],[6,14],[3,1],[3],[10,11],[8],[2,14],[1],[5],[4],[11,4],[12,24],[5,18],[13],[7,23],[8],[12],[3,27],[2,12],[5],[2,9],[13,4],[8,18],[1,7],[6],[9,29],[8,21],[5],[6,30],[1,12],[10],[4,15],[7,22],[11,26],[8,17],[9,29],[5],[3,4],[11,30],[12],[4,29],[3],[9],[6],[3,4],[1],[10],[3,29],[10,28],[1,20],[11,13],[3],[3,12],[3,8],[10,9],[3,26],[8],[7],[5],[13,17],[2,27],[11,15],[12],[9,19],[2,15],[3,16],[1],[12,17],[9,1],[6,19],[4],[5],[5],[8,1],[11,7],[5,2],[9,28],[1],[2,2],[7,4],[4,22],[7,24],[9,26],[13,28],[11,26]]
// ["LRUCache","get","put","get","put","put","get","get"]
// [[2],[2],[2,6],[1],[1,5],[1,2],[1],[2]]
// ["LRUCache","put","get"]
// [[1],[2,1],[2]]
// ["LRUCache","put","put","get","put","get","put","get","get","get"]
// [[2],[1,1],[2,2],[1],[3,3],[2],[4,4],[1],[3],[4]]
// ["LRUCache","put","get","put","get","get"]
// [[1],[2,1],[2],[3,2],[2],[3]]
// ["LRUCache","put","put","get","put","put","get"]
// [[2],[2,1],[2,2],[2],[1,1],[4,1],[2]]
// ["LRUCache", "put", "put", "put", "get", "put", "put", "put", "get", "put", "get", "put", "put", "get", "get", "get", "put", "get", "get", "get", "get"]
// [[1658], [4436, 83484], [2581, 30918], [319, 29740], [319], [685, 9109], [4640, 36374], [8579, 92555], [685], [1852, 88583], [1852], [1967, 46412], [3816, 37570], [8579], [319], [4640], [1636, 57826], [1636], [1636], [319], [2581]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get","put","put","get","get","get","put","put","get","put","get","put","get","get","get","put","put","put","get","put","get","get","put","put","get","put","put","put","put","get","put","put","get","put","put","get","put","put","put","put","put","get","put","put","get","put","get","get","get","put","get","get","put","put","put","put","get","put","put","put","put","get","get","get"]
// [[10],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9],[4,30],[9,3],[9],[10],[10],[6,14],[3,1],[3],[10,11],[8],[2,14],[1],[5],[4],[11,4],[12,24],[5,18],[13],[7,23],[8],[12],[3,27],[2,12],[5],[2,9],[13,4],[8,18],[1,7],[6],[9,29],[8,21],[5],[6,30],[1,12],[10],[4,15],[7,22],[11,26],[8,17],[9,29],[5],[3,4],[11,30],[12],[4,29],[3],[9],[6],[3,4],[1],[10],[3,29],[10,28],[1,20],[11,13],[3],[3,12],[3,8],[10,9],[3,26],[8],[7],[5]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get","put","put","get","get","get","put","put","get","put","get","put","get","get","get","put","put","put","get","put","get","get","put","put","get","put","put","put","put","get","put","put","get","put","put","get","put","put","put","put","put","get","put","put","get","put","get","get","get","put"]
// [[10],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9],[4,30],[9,3],[9],[10],[10],[6,14],[3,1],[3],[10,11],[8],[2,14],[1],[5],[4],[11,4],[12,24],[5,18],[13],[7,23],[8],[12],[3,27],[2,12],[5],[2,9],[13,4],[8,18],[1,7],[6],[9,29],[8,21],[5],[6,30],[1,12],[10],[4,15],[7,22],[11,26],[8,17],[9,29],[5],[3,4],[11,30],[12],[4,29],[3],[9],[6],[3,4]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get","put","put","get","get","get","put","put","get","put","get","put","get","get","get","put","put","put","get","put","get","get","put","put","get","put","put","put","put","get"]
// [[10],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9],[4,30],[9,3],[9],[10],[10],[6,14],[3,1],[3],[10,11],[8],[2,14],[1],[5],[4],[11,4],[12,24],[5,18],[13],[7,23],[8],[12],[3,27],[2,12],[5],[2,9],[13,4],[8,18],[1,7],[6]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get","put","put","get","get","get","put","put","get","put","get"]
// [[10],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9],[4,30],[9,3],[9],[10],[10],[6,14],[3,1],[3],[10,11],[8]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get","put","put","get","get","get","put","put","get","put","get","put","get","get","get"]
// [[10],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9],[4,30],[9,3],[9],[10],[10],[6,14],[3,1],[3],[10,11],[8],[2,14],[1],[5],[4]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get","put","put","get","get","get","put","put","get","put","get"]
// [[8],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9],[4,30],[9,3],[9],[10],[10],[6,14],[3,1],[3],[10,11],[8]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get","get","get"]
// [[4],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5],[8],[9]]
// ["LRUCache","put","put","put","put","put","get","put","get","get","put","get","put","put","put","get","put","get","get"]
// [[4],[10,13],[3,17],[6,11],[10,5],[9,10],[13],[2,19],[2],[3],[5,25],[8],[9,22],[5,5],[1,30],[11],[9,12],[7],[5]]
// ["LRUCache", "put", "put", "put", "get", "put", "put", "put", "get", "put", "get", "put", "put", "get", "get", "get", "put", "get", "get", "get", "get"]
// [[5], [4436, 83484], [2581, 30918], [319, 29740], [319], [685, 9109], [4640, 36374], [8579, 92555], [685], [1852, 88583], [1852], [1967, 46412], [3816, 37570], [8579], [319], [4640], [1636, 57826], [1636], [1636], [319], [2581]]
// ["LRUCache", "put", "put", "put", "get", "put", "put", "put", "get", "put", "get", "put", "put", "get", "get", "get", "put", "get", "get", "get", "get"]
// [[4], [4436, 83484], [2581, 30918], [319, 29740], [319], [685, 9109], [4640, 36374], [8579, 92555], [685], [1852, 88583], [1852], [1967, 46412], [3816, 37570], [8579], [319], [4640], [1636, 57826], [1636], [1636], [319], [2581]]
// ["LRUCache", "put", "put", "put", "get", "put", "put", "put", "get", "put", "get", "put", "put", "get", "get", "get", "put", "get", "get", "get", "get"]
// [[7], [4436, 83484], [2581, 30918], [319, 29740], [319], [685, 9109], [4640, 36374], [8579, 92555], [685], [1852, 88583], [1852], [1967, 46412], [3816, 37570], [8579], [319], [4640], [1636, 57826], [1636], [1636], [319], [2581]]
// ["LRUCache", "put", "put", "put", "get", "put", "put", "put", "get", "put", "get", "put", "put", "get", "get", "get", "put", "get", "get", "get", "get"]
// [[5], [4436, 83484], [2581, 30918], [319, 29740], [319], [685, 9109], [4640, 36374], [8579, 92555], [685], [1852, 88583], [1852], [1967, 46412], [3816, 37570], [8579], [319], [4640], [1636, 57826], [1636], [1636], [319], [2581]]
// ["LRUCache", "put", "put", "put", "get", "put", "put", "put", "get", "put", "get", "put", "put", "get", "get", "get", "put", "get", "get", "get", "get"]
// [[4], [4436, 8], [2581, 3], [319, 2], [319], [685, 9], [4640, 3], [8579, 9], [685], [1852, 8], [1852], [1967, 4], [3816, 3], [8579], [319], [4640], [1636, 5], [1636], [1636], [319], [2581]]
